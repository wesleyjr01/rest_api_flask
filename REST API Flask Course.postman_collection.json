{
	"info": {
		"_postman_id": "092f3c11-d942-4643-ae16-9197a3203ac4",
		"name": "REST API Flask Course",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Section 3",
			"item": [
				{
					"name": "/store",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://127.0.0.1:5000/store",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "5000",
							"path": [
								"store"
							]
						}
					},
					"response": []
				},
				{
					"name": "/store/<name>",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://127.0.0.1:5000/store/My Wonderful Store",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "5000",
							"path": [
								"store",
								"My Wonderful Store"
							]
						}
					},
					"response": []
				},
				{
					"name": "/store/<name>/item",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://127.0.0.1:5000/store/My Wonderful Store/item",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "5000",
							"path": [
								"store",
								"My Wonderful Store",
								"item"
							]
						}
					},
					"response": []
				},
				{
					"name": "/store/<name>/item",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\" : \"GTX1070 Ti\",\n\t\"price\" : 600\n}"
						},
						"url": {
							"raw": "http://127.0.0.1:5000/store/Magalu/item",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "5000",
							"path": [
								"store",
								"Magalu",
								"item"
							]
						}
					},
					"response": []
				},
				{
					"name": "/store",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\" : \"Magalu\"\n}"
						},
						"url": {
							"raw": "http://127.0.0.1:5000/store",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "5000",
							"path": [
								"store"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Section 4",
			"item": [
				{
					"name": "/items",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://127.0.0.1:5000/items",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "5000",
							"path": [
								"items"
							]
						},
						"description": "This should return a list of items, each in JSON format."
					},
					"response": []
				},
				{
					"name": "/item/<name>",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://127.0.0.1:5000/item/<name>",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "5000",
							"path": [
								"item",
								"<name>"
							]
						},
						"description": "This will return one specific item, uniquely identified by its name. No two items may have the same name."
					},
					"response": []
				},
				{
					"name": "/item/<name>",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "JWT eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJleHAiOjE1ODY3MTYzMjEsImlhdCI6MTU4NjcxNjAyMSwibmJmIjoxNTg2NzE2MDIxLCJpZGVudGl0eSI6MX0.oxCaaShlURFCDYFjryjCx_5H2_xKSmV7Ehe3l9lUIjs",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"price\" : 13.99\n}"
						},
						"url": {
							"raw": "http://127.0.0.1:5000/item/piano1",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "5000",
							"path": [
								"item",
								"piano1"
							]
						},
						"description": "This will create a new item. If the item already exists, it will fail."
					},
					"response": []
				},
				{
					"name": "/item/<name>",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "JWT eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJleHAiOjE1ODY3MTYzMjEsImlhdCI6MTU4NjcxNjAyMSwibmJmIjoxNTg2NzE2MDIxLCJpZGVudGl0eSI6MX0.oxCaaShlURFCDYFjryjCx_5H2_xKSmV7Ehe3l9lUIjs",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"price\" : 72\n}"
						},
						"url": {
							"raw": "http://127.0.0.1:5000/item/jaca2",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "5000",
							"path": [
								"item",
								"jaca2"
							]
						},
						"description": "This will create a new item or update and existing item."
					},
					"response": []
				},
				{
					"name": "/item/<name>",
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://127.0.0.1:5000/item/<name>",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "5000",
							"path": [
								"item",
								"<name>"
							]
						},
						"description": "This will delete an item, uniquely identified by its name. No two items may have the same name."
					},
					"response": []
				},
				{
					"name": "/auth",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"username\" : \"bob\", \"password\" : \"asdf\"}"
						},
						"url": {
							"raw": "http://127.0.0.1:5000/auth",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "5000",
							"path": [
								"auth"
							]
						},
						"description": "Need to authenticate first in order to ask for requests."
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Section 5",
			"item": [
				{
					"name": "/items",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://127.0.0.1:5000/items",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "5000",
							"path": [
								"items"
							]
						},
						"description": "This should return a list of items, each in JSON format."
					},
					"response": []
				},
				{
					"name": "/item/<name>",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://127.0.0.1:5000/item/<name>",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "5000",
							"path": [
								"item",
								"<name>"
							]
						},
						"description": "This will return one specific item, uniquely identified by its name. No two items may have the same name."
					},
					"response": []
				},
				{
					"name": "/item/<name>",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "JWT eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJleHAiOjE1ODY3MTYzMjEsImlhdCI6MTU4NjcxNjAyMSwibmJmIjoxNTg2NzE2MDIxLCJpZGVudGl0eSI6MX0.oxCaaShlURFCDYFjryjCx_5H2_xKSmV7Ehe3l9lUIjs",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"price\" : 13.99\n}"
						},
						"url": {
							"raw": "http://127.0.0.1:5000/item/piano1",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "5000",
							"path": [
								"item",
								"piano1"
							]
						},
						"description": "This will create a new item. If the item already exists, it will fail."
					},
					"response": []
				},
				{
					"name": "/item/<name>",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "JWT eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJleHAiOjE1ODY3MTYzMjEsImlhdCI6MTU4NjcxNjAyMSwibmJmIjoxNTg2NzE2MDIxLCJpZGVudGl0eSI6MX0.oxCaaShlURFCDYFjryjCx_5H2_xKSmV7Ehe3l9lUIjs",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"price\" : 72\n}"
						},
						"url": {
							"raw": "http://127.0.0.1:5000/item/jaca2",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "5000",
							"path": [
								"item",
								"jaca2"
							]
						},
						"description": "This will create a new item or update and existing item."
					},
					"response": []
				},
				{
					"name": "/item/<name>",
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://127.0.0.1:5000/item/<name>",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "5000",
							"path": [
								"item",
								"<name>"
							]
						},
						"description": "This will delete an item, uniquely identified by its name. No two items may have the same name."
					},
					"response": []
				},
				{
					"name": "/auth",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"username\" : \"anne\", \"password\" : \"xyz\"}"
						},
						"url": {
							"raw": "http://127.0.0.1:5000/auth",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "5000",
							"path": [
								"auth"
							]
						},
						"description": "Need to authenticate first in order to ask for requests."
					},
					"response": []
				},
				{
					"name": "/register",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"username\" : \"anne\", \"password\" : \"xyz\"}"
						},
						"url": {
							"raw": "http://127.0.0.1:5000/auth",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "5000",
							"path": [
								"auth"
							]
						},
						"description": "Need to authenticate first in order to ask for requests."
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Section 6",
			"item": [
				{
					"name": "/items",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "JWT {{jwt_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{url}}/items",
							"host": [
								"{{url}}"
							],
							"path": [
								"items"
							]
						},
						"description": "This should return a list of items, each in JSON format."
					},
					"response": []
				},
				{
					"name": "/stores",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "JWT {{jwt_token}}"
							}
						],
						"url": {
							"raw": "{{url}}/stores",
							"host": [
								"{{url}}"
							],
							"path": [
								"stores"
							]
						},
						"description": "This should return a list of stores, each in JSON format."
					},
					"response": []
				},
				{
					"name": "/item/<name>",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "JWT {{jwt_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{url}}/item/<name>",
							"host": [
								"{{url}}"
							],
							"path": [
								"item",
								"<name>"
							]
						},
						"description": "This will return one specific item, uniquely identified by its name. No two items may have the same name."
					},
					"response": []
				},
				{
					"name": "/store/<name>",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "JWT {{jwt_token}}"
							}
						],
						"url": {
							"raw": "{{url}}/store/<name>",
							"host": [
								"{{url}}"
							],
							"path": [
								"store",
								"<name>"
							]
						},
						"description": "This will return one specific store, uniquely identified by its name. No two items may have the same name."
					},
					"response": []
				},
				{
					"name": "/item/<name>",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "JWT {{jwt_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"price\" : 13.99,\n\t\"store_id\" : 1\n}"
						},
						"url": {
							"raw": "{{url}}/item/banana",
							"host": [
								"{{url}}"
							],
							"path": [
								"item",
								"banana"
							]
						},
						"description": "This will create a new item. If the item already exists, it will fail."
					},
					"response": []
				},
				{
					"name": "/store/<name>",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "JWT {{jwt_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n}"
						},
						"url": {
							"raw": "{{url}}/store/Magalu",
							"host": [
								"{{url}}"
							],
							"path": [
								"store",
								"Magalu"
							]
						},
						"description": "This will create a new store. If the item already exists, it will fail."
					},
					"response": []
				},
				{
					"name": "/item/<name>",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "JWT {{jwt_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"price\" : 191919191,\n\t\"store_id\" : 1\n}"
						},
						"url": {
							"raw": "{{url}}/item/bananas",
							"host": [
								"{{url}}"
							],
							"path": [
								"item",
								"bananas"
							]
						},
						"description": "This will create a new item or update and existing item."
					},
					"response": []
				},
				{
					"name": "/item/<name>",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "JWT {{jwt_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/item/<name>",
							"host": [
								"{{url}}"
							],
							"path": [
								"item",
								"<name>"
							]
						},
						"description": "This will delete an item, uniquely identified by its name. No two items may have the same name."
					},
					"response": []
				},
				{
					"name": "/store/<name>",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "JWT {{jwt_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/store/Magalu",
							"host": [
								"{{url}}"
							],
							"path": [
								"store",
								"Magalu"
							]
						},
						"description": "This will delete a store, uniquely identified by its name. No two stores may have the same name."
					},
					"response": []
				},
				{
					"name": "/auth",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "192f5a36-cf6d-4edf-8571-085450f16743",
								"exec": [
									"",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"tests[\"Acess token was not empty\"] = jsonData.access_token !== undefined;",
									"postman.setEnvironmentVariable(\"jwt_token\", jsonData.access_token);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"username\" : \"Wesley\", \"password\" : \"1Salgado\"}"
						},
						"url": {
							"raw": "{{url}}/auth",
							"host": [
								"{{url}}"
							],
							"path": [
								"auth"
							]
						},
						"description": "Need to authenticate first in order to ask for requests."
					},
					"response": []
				},
				{
					"name": "/register",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"username\" : \"Wesley\", \"password\" : \"1Salgado\"}"
						},
						"url": {
							"raw": "{{url}}/register",
							"host": [
								"{{url}}"
							],
							"path": [
								"register"
							]
						},
						"description": "Need to authenticate first in order to ask for requests."
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "c9de7118-68f9-42b1-a6a3-e33d8ae43aca",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "b8e46164-c2b9-4361-afcb-aafc91a77d7f",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Section 11",
			"item": [
				{
					"name": "/items",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{url}}/items",
							"host": [
								"{{url}}"
							],
							"path": [
								"items"
							]
						},
						"description": "This should return a list of items, each in JSON format."
					},
					"response": []
				},
				{
					"name": "/stores",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{jwt_token}}"
							}
						],
						"url": {
							"raw": "{{url}}/stores",
							"host": [
								"{{url}}"
							],
							"path": [
								"stores"
							]
						},
						"description": "This should return a list of stores, each in JSON format."
					},
					"response": []
				},
				{
					"name": "/item/<name>",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{url}}/item/<name>",
							"host": [
								"{{url}}"
							],
							"path": [
								"item",
								"<name>"
							]
						},
						"description": "This will return one specific item, uniquely identified by its name. No two items may have the same name."
					},
					"response": []
				},
				{
					"name": "/user/<id>",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{jwt_token}}"
							}
						],
						"url": {
							"raw": "{{url}}/user/<id>",
							"host": [
								"{{url}}"
							],
							"path": [
								"user",
								"<id>"
							]
						},
						"description": "This will return one specific item, uniquely identified by its name. No two items may have the same name."
					},
					"response": []
				},
				{
					"name": "/store/<name>",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{jwt_token}}"
							}
						],
						"url": {
							"raw": "{{url}}/store/<name>",
							"host": [
								"{{url}}"
							],
							"path": [
								"store",
								"<name>"
							]
						},
						"description": "This will return one specific store, uniquely identified by its name. No two items may have the same name."
					},
					"response": []
				},
				{
					"name": "/item/<name>",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"price\" : 13.99,\n\t\"store_id\" : 1\n}"
						},
						"url": {
							"raw": "{{url}}/item/banana",
							"host": [
								"{{url}}"
							],
							"path": [
								"item",
								"banana"
							]
						},
						"description": "This will create a new item. If the item already exists, it will fail."
					},
					"response": []
				},
				{
					"name": "/store/<name>",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{jwt_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n}"
						},
						"url": {
							"raw": "{{url}}/store/Magalu",
							"host": [
								"{{url}}"
							],
							"path": [
								"store",
								"Magalu"
							]
						},
						"description": "This will create a new store. If the item already exists, it will fail."
					},
					"response": []
				},
				{
					"name": "/item/<name>",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"price\" : 191919191,\n\t\"store_id\" : 1\n}"
						},
						"url": {
							"raw": "{{url}}/item/bananas",
							"host": [
								"{{url}}"
							],
							"path": [
								"item",
								"bananas"
							]
						},
						"description": "This will create a new item or update and existing item."
					},
					"response": []
				},
				{
					"name": "/item/<name>",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/item/<name>",
							"host": [
								"{{url}}"
							],
							"path": [
								"item",
								"<name>"
							]
						},
						"description": "This will delete an item, uniquely identified by its name. No two items may have the same name."
					},
					"response": []
				},
				{
					"name": "/user/<id>",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/user/1",
							"host": [
								"{{url}}"
							],
							"path": [
								"user",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "/store/<name>",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{jwt_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/store/Magalu",
							"host": [
								"{{url}}"
							],
							"path": [
								"store",
								"Magalu"
							]
						},
						"description": "This will delete a store, uniquely identified by its name. No two stores may have the same name."
					},
					"response": []
				},
				{
					"name": "/login",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "82642921-6a11-4c30-913f-c24356ec8cb5",
								"exec": [
									"",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"tests[\"Acess token was not empty\"] = jsonData.access_token !== undefined;",
									"postman.setEnvironmentVariable(\"jwt_token\", jsonData.access_token);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"username\" : \"Wesley\", \"password\" : \"1Salgado\"}"
						},
						"url": {
							"raw": "{{url}}/login",
							"host": [
								"{{url}}"
							],
							"path": [
								"login"
							]
						},
						"description": "Need to authenticate first in order to ask for requests."
					},
					"response": []
				},
				{
					"name": "/register",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"username\" : \"Wesley\", \"password\" : \"1Salgado\"}"
						},
						"url": {
							"raw": "{{url}}/register",
							"host": [
								"{{url}}"
							],
							"path": [
								"register"
							]
						},
						"description": "Need to authenticate first in order to ask for requests."
					},
					"response": []
				},
				{
					"name": "/refresh",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE1ODc4NTM3ODMsIm5iZiI6MTU4Nzg1Mzc4MywianRpIjoiZDNjMDgyM2EtMjlhYS00ZmRhLTgwZGQtOWIyN2Y0NGI4OWE5IiwiZXhwIjoxNTkwNDQ1NzgzLCJpZGVudGl0eSI6MSwidHlwZSI6InJlZnJlc2gifQ.0s8O2vOJQSyJoYtlhixpZs9okKAZmHz8s3Y0b0k4ym0",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{url}}/refresh",
							"host": [
								"{{url}}"
							],
							"path": [
								"refresh"
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "a3343e9b-3940-4a7e-8fb3-146457c19729",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "0c27d067-b7bb-4f72-a0d4-5b0b559a1ef8",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		}
	],
	"protocolProfileBehavior": {}
}